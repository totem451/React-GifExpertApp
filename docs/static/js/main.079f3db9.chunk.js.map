{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","console","log","trim","length","c","type","value","onChange","target","getGifs","categoria","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"iNAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAyBA,OAEI,qCAEI,6BAAKD,IACL,8CACA,sBAAME,SAtBO,SAACC,GAElBA,EAAEC,iBAEFC,QAAQC,IAAI,gBAERN,EAAWO,OAAOC,OAAS,IAG3BV,GAAc,SAAAW,GAAC,OAAKT,GAAL,mBAAoBS,OACnCR,EAAc,OAYd,SACI,uBACIS,KAAO,OACPC,MAASX,EACTY,SAjCU,SAACT,GAEvBE,QAAQC,IAAIH,EAAEU,OAAOF,OACrBV,EAAcE,EAAEU,OAAOF,gB,+BCRlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAKEA,EAAKC,OALP,uBAKZC,EALY,EAKZA,KAIDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAEzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAdvB,kBAmBZM,GAnBY,4CAAH,sDCAPO,EAAc,SAAC,GAA+B,IAA9BJ,EAA6B,EAA7BA,GAAIC,EAAyB,EAAzBA,MAAOV,EAAkB,EAAlBA,IAKpC,OAHAZ,QAAQC,IAAIoB,EAAIC,EAAOV,GAInB,sBAAKc,UAAY,6CAAjB,UACI,qBAAKC,IAAOf,EAAKgB,IAAON,IACxB,4BAAIA,QCLHO,EAAU,SAAC,GAAmB,IAAjBnB,EAAgB,EAAhBA,UAOtB,ECTwB,SAAEA,GAE1B,MAA0BhB,mBAAS,CAC/BuB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAgCA,OA3BAC,qBAAW,WAEPxB,EAASC,GACJwB,MAAM,SAAAC,GAEHC,YAAW,WAEPpC,QAAQC,IAAIkC,GAEZH,EAAS,CACLf,KAAMkB,EACNL,SAAS,MAGd,UAIZ,CAACpB,IASGqB,EDzBwBM,CAAc3B,GAAjCa,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QAiCpB,OA+BI,cA7BA,CA6BA,sBACI,oBAAIJ,UAAY,wCAAhB,SAAyDhB,IAGvDoB,GAAW,mBAAGJ,UAAY,mCAAf,wBAEb,qBAAKA,UAAY,YAAjB,SAGQH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,aAEIA,IAAKA,GACDA,GAFCA,EAAIC,aEnFxBiB,EAAe,WAI5B,MAAoC5C,mBAAS,CAAC,mBAA9C,mBAAO6C,EAAP,KAAmB9C,EAAnB,KAUI,OAEI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAiBA,IAC9B,uBAKA,6BAEQ8C,EAAWpB,KAAI,SAAAT,GAAS,OAGpB,aADA,CACC,EAAD,CACIA,UAAaA,GACNA,YC7BnC8B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.079f3db9.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategorias}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n\r\n        console.log(e.target.value);\r\n        setInputValue(e.target.value);\r\n\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        console.log('Submit hecho');\r\n\r\n        if (inputValue.trim().length > 0) {\r\n\r\n            // setCategorias(c => [...c, inputValue]);\r\n            setCategorias(c => [inputValue, ...c]);\r\n            setInputValue(' ');\r\n\r\n        }\r\n\r\n    };\r\n\r\n    return (\r\n\r\n        <>\r\n\r\n            <h1>{inputValue}</h1>\r\n            <h2>Add Category</h2>\r\n            <form onSubmit = {handleSubmit}>\r\n                <input \r\n                    type = 'text'\r\n                    value = {inputValue}\r\n                    onChange = {handleInputChange}\r\n                />\r\n            </form>\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategorias: PropTypes.func.isRequired\r\n}","// import React from 'react';\r\n\r\nexport const getGifs = async(categoria) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(categoria)}&limit=10&api_key=XQYohDnNz7C9bpUK8df50bU8ybj42vmY`;\r\n    const resp = await fetch(url);\r\n    // resp.ok\r\n    const {data} = await resp.json();\r\n\r\n    // console.log(data);\r\n\r\n    const gifs = data.map(img => {\r\n\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n\r\n    })\r\n\r\n    return gifs;\r\n    \r\n};","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}/*props*/) => {\r\n\r\n    console.log(id, title, url/*props*/)\r\n\r\n\r\n    return (\r\n        <div className = 'card animate__animated animate__fadeInDown'>\r\n            <img src = {url} alt = {title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n\r\n}\r\n","import React/*, { useState, useEffect }*/ from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n// import { getGifs } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ categoria }) => {\r\n\r\n    // const [count, setCount] = useState(0)\r\n\r\n    // const [images, setImages] = useState([]);\r\n\r\n    // const state = useFetchGifs();\r\n    const {data:images, loading} = useFetchGifs( categoria );\r\n    // console.log(data);\r\n    // console.log(loading);\r\n\r\n    // useEffect(() => {\r\n    //     getGifs(categoria)\r\n    //         .then(setImages);\r\n    // }, [categoria])\r\n\r\n    // const getGifs = async() => {\r\n\r\n    //     const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(categoria)}&limit=10&api_key=XQYohDnNz7C9bpUK8df50bU8ybj42vmY`;\r\n    //     const resp = await fetch(url);\r\n    //     // resp.ok\r\n    //     const {data} = await resp.json();\r\n\r\n    //     // console.log(data);\r\n\r\n    //     const gifs = data.map(img => {\r\n\r\n    //         return {\r\n    //             id: img.id,\r\n    //             title: img.title,\r\n    //             url: img.images?.downsized_medium.url\r\n    //         }\r\n\r\n    //     })\r\n\r\n    //     console.log(gifs);\r\n    //     setImages(gifs);\r\n\r\n    // };\r\n\r\n    return (  \r\n\r\n        // <>\r\n        //     <h3>{categoria}</h3>\r\n        //     <div className='card-grid'>\r\n        //         {/* <h3>{count}</h3>\r\n        //         <button onClick = {() => setCount(count + 1)}></button> */}\r\n        //         {/* <ol>\r\n        //             {\r\n        //                 images.map(img => (\r\n        //                     <li key = {img.id}>{img.title}</li>\r\n        //                 ))\r\n        //             }\r\n        //             {\r\n        //                 images.map(({id, title}) => (\r\n        //                     <li key = {id}>{title}</li>\r\n        //                 ))\r\n        //             }\r\n        //         </ol> */}\r\n        //         {\r\n        //             images.map(img => (\r\n        //                 <GifGridItem\r\n        //                     key={img.id}\r\n        //                     img={img}\r\n        //                     {...img}\r\n        //                 />\r\n        //             ))\r\n        //         }\r\n        //     </div>\r\n        // </>\r\n\r\n        <>\r\n            <h3 className = 'animate__animated animate__fadeInDown'>{categoria}</h3>\r\n\r\n            {/* {loading ? 'Cargando...' : 'Data cargada'} */}\r\n            { loading && <p className = 'animate__animated animate__flash'>Loading...</p> }\r\n            \r\n            <div className = 'card-grid'>\r\n\r\n                {\r\n                    images.map(img => (\r\n                        <GifGridItem\r\n                            key={img.id}\r\n                            img={img}\r\n                            {...img}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = ( categoria ) => {\r\n    \r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect( () => {\r\n\r\n        getGifs( categoria )\r\n            .then( imgs => {\r\n\r\n                setTimeout(() => {\r\n                    \r\n                    console.log(imgs);\r\n\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    });\r\n\r\n                }, 2000);\r\n\r\n            })\r\n\r\n    }, [categoria] )\r\n\r\n    // setTimeout( () => {\r\n    //     setState({\r\n    //         data: [1, 2, 3, 4, 5],\r\n    //         loading: false\r\n    //     })\r\n    // }, 3000 );\r\n\r\n    return state; // {data: [], loading: true}\r\n\r\n}\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    // const categorias = ['Breacking bad', 'Peaky blinders', 'Suits'];\r\n\r\nconst [categorias, setCategorias] = useState(['Rick and Morty'/*, 'Breacking bad', 'Peaky blinders', 'Suits'*/]);\r\n\r\n    // const handleAdd = () => {\r\n\r\n    //     setCategorias([...categorias, 'Nueva serie']); // Agrega al final\r\n    //     // setCategorias(['Nueva serie', ...categorias]); // Agrega al principio\r\n    //     // setCategorias(c => [...c, 'Nueva serie']); // Agrega al final\r\n\r\n    // };\r\n\r\n    return (\r\n\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategorias = {setCategorias}/>\r\n            <hr />\r\n\r\n            {/* <button onClick = {handleAdd}>Agregar</button> */}\r\n\r\n\r\n            <ol>\r\n                {\r\n                    categorias.map(categoria => (\r\n\r\n                        // <li key = {categoria}>{categoria}</li>\r\n                        <GifGrid \r\n                            categoria = {categoria}\r\n                            key = {categoria}\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n            {/* <>\r\n                {\r\n                    categorias.map((categoria, i) => {\r\n                        return <li>{categorias[i]}</li>\r\n                    })\r\n                }\r\n            </> */}\r\n        </>\r\n\r\n    );\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport '../node_modules/animate.css';\nimport {GifExpertApp} from './GifExpertApp';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}